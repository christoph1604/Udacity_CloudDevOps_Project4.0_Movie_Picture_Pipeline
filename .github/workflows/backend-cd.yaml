name: Backend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - './starter/backend/**'

defaults:
  run:
    working-directory: ./starter/backend

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10.16
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.16
      - name: Install pipenv
        run: pip install pipenv
      - name: Install dependencies
        run: pipenv install --dev
      - name: Run linter
        run: |
          pipenv run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10.16
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.16
      - name: Install pipenv
        run: pip install pipenv
      - name: Install dependencies
        run: pipenv install
      - name: Run tests
        run: pipenv run test

  build: 
    needs: [linting, test]
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: mp-backend:${{ github.sha }}
      EKS_CLUSTER_NAME: cluster
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10.16
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.16
      - name: Install pipenv
        run: pip install pipenv
      - name: Install dependencies
        run: pipenv install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        run: |
          docker build --tag=$IMAGE_TAG .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-to-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag the Docker image
        run: docker tag $IMAGE_TAG ${{ steps.login-to-ecr.outputs.registry }}/$IMAGE_TAG
      - name: Push the Docker image to ECR
        run: docker push ${{ steps.login-to-ecr.outputs.registry }}/$IMAGE_TAG

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: mp-backend:${{ github.sha }}
      EKS_CLUSTER_NAME: cluster
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10.16
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.16
      - name: Install pipenv
        run: pip install pipenv
      - name: Install dependencies
        run: pipenv install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
      - name: Login to Amazon ECR
        id: login-to-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2
      - name: Deploy Docker file to Kubernetes cluster      
        run: |
          cd ./k8s
          kustomize edit set image backend=${{ steps.login-to-ecr.outputs.registry }}/$IMAGE_TAG
          kustomize build | kubectl apply -f -
